name: 'Terraform Development'

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-dev.yml'

permissions:
  contents: read
  pull-requests: write

env:
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
  TF_VAR_environment: dev

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Auth to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config=backend-dev.hcl

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@v7
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Plan üìù
          \`\`\`\n
          ${process.env.PLAN || 'No output available'}
          \`\`\`
          `;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      run: terraform apply -auto-approve 
